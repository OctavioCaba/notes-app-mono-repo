{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","services/login.js","components/Togglable.js","components/LoginForm.js","components/NoteForm.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","token","axios","get","then","response","data","newObject","config","headers","authorization","post","id","put","newToken","login","credentials","a","Togglable","forwardRef","ref","children","buttonLabel","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","displayName","LoginForm","handleSubmit","props","onSubmit","type","value","username","onChange","handleUsernameChange","name","placeholder","password","handlePasswordChange","NoteForm","addNote","handleLogout","newNote","setNewNote","togglableRef","useRef","e","preventDefault","current","target","App","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","setUsername","setPassword","user","setUser","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","loginService","setItem","stringify","console","log","setTimeout","notesToShow","filter","noteObject","returnedNote","concat","removeItem","map","i","key","find","n","changedNote","catch","error","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"yOAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCK3BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,yBAAKJ,UAAU,SACZI,I,gBCLHC,EAAQ,KAgCG,EA3BA,WAEb,OADgBC,IAAMC,IATR,cAUCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAyB5B,EAtBA,SAACC,GACd,IAAMC,EAAS,CACbC,QAAS,CACPC,cAAeT,IAKnB,OADgBC,IAAMS,KApBR,aAoBsBJ,EAAWC,GAChCJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc5B,EAXA,SAACM,EAAIL,GAClB,IAAMC,EAAS,CACbC,QAAS,CACPC,cAAeT,IAKnB,OADgBC,IAAMW,IAAN,UA/BF,aA+BE,YAAwBD,GAAML,EAAWC,GAC1CJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAG5B,EA/BE,SAAAQ,GACfb,EAAK,iBAAaa,ICEL,GAAEC,MALN,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACWf,IAAMS,KAHf,aAG6BK,GAD/B,uBACJV,EADI,EACJA,KADI,kBAELA,GAFK,2CAAH,uD,QCALY,EAAYC,sBAAW,WAAqCC,GAAS,IAA3CC,EAA0C,EAA1CA,SAA0C,IAAhCC,mBAAgC,MAAlB,OAAkB,EACxE,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAE5CK,EAAmB,kBAAMJ,GAAYD,IAQ3C,OANAM,8BAAoBV,GAAK,WACvB,MAAO,CACLS,uBAKF,6BACE,yBAAKE,MAAOL,GACV,4BAAQ5B,QAAS+B,GAAmBP,IAGtC,yBAAKS,MAAOH,GACTP,EACD,4BAAQvB,QAAS+B,GAAjB,eAMRX,EAAUc,YAAc,YAMTd,QCjCA,SAASe,EAAT,GAAiD,IAA3BC,EAA0B,EAA1BA,aAAiBC,EAAS,gCAC7D,OACE,kBAAC,EAAD,CAAWb,YAAY,cACrB,0BAAMc,SAAUF,GACd,6BACE,2BACEG,KAAK,OACLC,MAAOH,EAAMI,SACbC,SAAUL,EAAMM,qBAChBC,KAAK,WACLC,YAAY,cAGhB,6BACE,2BACEN,KAAK,WACLC,MAAOH,EAAMS,SACbJ,SAAUL,EAAMU,qBAChBH,KAAK,WACLC,YAAY,cAGhB,4BAAQ/B,GAAG,qBAAX,WCvBO,SAASkC,EAAT,GAA+C,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,aAC3C,EAA8BzB,mBAAS,IAAvC,mBAAO0B,EAAP,KAAgBC,EAAhB,KACMC,EAAeC,mBAoBrB,OACE,kBAAC,EAAD,CAAW9B,YAAY,WAAWF,IAAK+B,GACrC,iDAEA,0BAAMf,SAlBW,SAAAiB,GACnBA,EAAEC,iBAOFP,EALmB,CACjBlD,QAASoD,EACTtD,WAAW,IAIbuD,EAAW,IAEXC,EAAaI,QAAQ1B,qBAQjB,2BACES,MAAOW,EACPT,SAzBa,SAAAa,GACnBH,EAAWG,EAAEG,OAAOlB,QAyBdK,YAAY,4BAEd,4BAAQN,KAAK,UAAb,SAEF,6BACE,4BAAQvC,QAASkD,GAAjB,YC7BR,IAyHeS,EAzHH,WACV,MAA0BlC,mBAAS,IAAnC,mBAAOmC,EAAP,KAAcC,EAAd,KACA,EAA8BpC,oBAAS,GAAvC,mBAAOqC,EAAP,KAAgBC,EAAhB,KACA,EAAwCtC,mBAAS,MAAjD,mBAAOuC,EAAP,KAAqBC,EAArB,KACA,EAAgCxC,mBAAS,IAAzC,mBAAOgB,EAAP,KAAiByB,EAAjB,KACA,EAAgCzC,mBAAS,IAAzC,mBAAOqB,EAAP,KAAiBqB,EAAjB,KACA,EAAwB1C,mBAAS,MAAjC,mBAAO2C,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACRC,IAEGjE,MAAK,SAAAkE,GACJX,EAASW,QAEZ,IAEHF,qBAAU,WACR,IAAMG,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAGH,EAAgB,CACjB,IAAML,EAAOS,KAAKC,MAAML,GACxBJ,EAAQD,GACRG,EAAqBH,EAAKjE,UAE3B,IAEH,IA+BM4E,EAAW,uCAAG,WAAMxB,GAAN,eAAApC,EAAA,6DAClBoC,EAAEC,iBADgB,kBAIGwB,EAAa/D,MAAM,CAACwB,WAAUK,aAJjC,OAIVsB,EAJU,OAMhBM,OAAOC,aAAaM,QAClB,oBAAqBJ,KAAKK,UAAUd,IAEtCG,EAAqBH,EAAKjE,OAE1BkE,EAAQD,GACRF,EAAY,IACZC,EAAY,IAbI,kDAehBgB,QAAQC,IAAR,MACAnB,EAAgB,qBAChBoB,YAAW,WACTpB,EAAgB,QACf,KAnBa,0DAAH,sDAuBXqB,EAAcxB,EAChBF,EACAA,EAAM2B,QAAO,SAAA7F,GAAI,OAAIA,EAAKG,aAE9B,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcK,QAAS8D,IAGrBI,EACE,kBAACpB,EAAD,CACEC,QA5DM,SAAAuC,GACdjB,EACUiB,GACPlF,MAAK,SAAAmF,GAAY,OAAI5B,EAASD,EAAM8B,OAAOD,QA0DtCvC,aAnEW,WACnBmB,EAAQ,MACRE,EAAqBH,EAAKjE,OAC1BuE,OAAOC,aAAagB,WAAW,wBAkEzB,kBAACxD,EAAD,CACEM,SAAUA,EACVK,SAAUA,EACVH,qBAAsB,gBAAGe,EAAH,EAAGA,OAAH,OAAgBQ,EAAYR,EAAOlB,QACzDO,qBAAsB,gBAAGW,EAAH,EAAGA,OAAH,OAAgBS,EAAYT,EAAOlB,QACzDJ,aAAc2C,IAIpB,6BACE,4BAAQ/E,QAAS,kBAAM+D,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGwB,EAAYM,KAAI,SAAClG,EAAMmG,GAAP,OACf,kBAAC,EAAD,CACEC,IAAKD,EACLnG,KAAMA,EACNC,iBAAkB,kBA5ED,SAACmB,GAC1B,IAAMpB,EAAOkE,EAAMmC,MAAK,SAAAC,GAAC,OAAIA,EAAElF,KAAOA,KAChCmF,EAAW,2BAAQvG,GAAR,IAAcG,WAAYH,EAAKG,YAEhD0E,EACUzD,EAAImF,GACX3F,MAAK,SAAAmF,GACJ5B,EAASD,EAAMgC,KAAI,SAAAlG,GAAI,OAAIA,EAAKoB,KAAOA,EAAKpB,EAAO+F,SAEpDS,OAAM,SAAAC,GACLlC,EAAgB,SAAD,OACJvE,EAAKK,QADD,sCAGfsF,YAAW,WACTpB,EAAgB,QACf,QA6DyBmC,CAAmB1G,EAAKoB,a,MCrH5DuF,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.c813be97.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n/* https://immense-beach-78342.herokuapp.com/api/notes */\r\n\r\nlet token = null;\r\nconst setToken = newToken => {\r\n  token = `Bearer ${newToken}`;\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const config = {\r\n    headers: {\r\n      authorization: token\r\n    }\r\n  };\r\n\r\n  const request = axios.post(baseUrl, newObject, config);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const config = {\r\n    headers: {\r\n      authorization: token\r\n    }\r\n  };\r\n\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject, config);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nexport default { getAll, create, update, setToken };\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/login';\r\n\r\nconst login = async credentials => {\r\n  const { data } = await axios.post(baseUrl, credentials);\r\n  return data;\r\n}\r\n\r\nexport default { login };\r\n","import React, { useState, forwardRef, useImperativeHandle } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Togglable = forwardRef(({ children, buttonLabel = 'Show' }, ref) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' };\r\n  const showWhenVisible = { display: visible ? '' : 'none' };\r\n\r\n  const toggleVisibility = () => setVisible(!visible);\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{buttonLabel}</button>\r\n      </div>\r\n\r\n      <div style={showWhenVisible}>\r\n        {children}\r\n        <button onClick={toggleVisibility}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nTogglable.displayName = 'Togglable';\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string\r\n};\r\n\r\nexport default Togglable;\r\n","import React from 'react';\r\nimport Togglable from './Togglable';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function LoginForm ({ handleSubmit, ...props }) {\r\n  return (\r\n    <Togglable buttonLabel='Show Login'>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <input\r\n            type='text'\r\n            value={props.username}\r\n            onChange={props.handleUsernameChange}\r\n            name='Username'\r\n            placeholder='Username'\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type='password'\r\n            value={props.password}\r\n            onChange={props.handlePasswordChange}\r\n            name='Password'\r\n            placeholder='Password'\r\n          />\r\n        </div>\r\n        <button id=\"form-login-button\">Login</button>\r\n      </form>\r\n    </Togglable>\r\n  );\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  username: PropTypes.string\r\n};\r\n","import React, { useRef, useState } from 'react';\r\nimport Togglable from './Togglable';\r\n\r\nexport default function NoteForm ({ addNote, handleLogout }) {\r\n  const [newNote, setNewNote] = useState('');\r\n  const togglableRef = useRef();\r\n\r\n  const handleChange = e => {\r\n    setNewNote(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const noteObject = {\r\n      content: newNote,\r\n      important: false\r\n    };\r\n\r\n    addNote(noteObject);\r\n    setNewNote('');\r\n\r\n    togglableRef.current.toggleVisibility();\r\n  }\r\n\r\n  return (\r\n    <Togglable buttonLabel='New Note' ref={togglableRef}>\r\n      <h3>Create a New Note</h3>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          value={newNote}\r\n          onChange={handleChange}\r\n          placeholder='Write your note content'\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <div>\r\n        <button onClick={handleLogout}>Logout</button>\r\n      </div>\r\n    </Togglable>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport Notification from './components/Notification'\r\nimport noteService from './services/notes'\r\nimport loginService from './services/login';\r\nimport LoginForm from './components/LoginForm';\r\nimport NoteForm from './components/NoteForm';\r\n\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteAppUser');\r\n    if(loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON);\r\n      setUser(user);\r\n      noteService.setToken(user.token);\r\n    }\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    setUser(null);\r\n    noteService.setToken(user.token);\r\n    window.localStorage.removeItem('loggedNoteAppUser');\r\n  }\r\n\r\n  const addNote = noteObject => {\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => setNotes(notes.concat(returnedNote)));\r\n  }\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n  \r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)   \r\n      })\r\n  }\r\n\r\n  const handleLogin = async e => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      const user = await loginService.login({username, password});\r\n\r\n      window.localStorage.setItem(\r\n        'loggedNoteAppUser', JSON.stringify(user)\r\n      );\r\n      noteService.setToken(user.token);\r\n\r\n      setUser(user);\r\n      setUsername('');\r\n      setPassword('');\r\n    } catch (error) {\r\n      console.log(error);\r\n      setErrorMessage('wrong credentials');\r\n      setTimeout(() => {\r\n        setErrorMessage(null);\r\n      }, 5000);\r\n    }\r\n  }\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n\r\n      {\r\n        user\r\n        ? <NoteForm\r\n            addNote={addNote}\r\n            handleLogout={handleLogout}\r\n          />\r\n        : <LoginForm\r\n            username={username}\r\n            password={password}\r\n            handleUsernameChange={({ target }) => setUsername(target.value)}\r\n            handlePasswordChange={({ target }) => setPassword(target.value)}\r\n            handleSubmit={handleLogin}\r\n          />\r\n      }\r\n\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all' }\r\n        </button>\r\n      </div>      \r\n      <ul>\r\n        {notesToShow.map((note, i) => \r\n          <Note\r\n            key={i}\r\n            note={note} \r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}